<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.entity.auto.mapper.SysModuleMapper">
  <resultMap id="BaseResultMap" type="com.entity.auto.model.SysModule">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="module_name" jdbcType="VARCHAR" property="moduleName" />
    <result column="module_type" jdbcType="TINYINT" property="moduleType" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="module_path" jdbcType="VARCHAR" property="modulePath" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="level" jdbcType="BIT" property="level" />
    <result column="application_name" jdbcType="VARCHAR" property="applicationName" />
    <result column="controller_name" jdbcType="VARCHAR" property="controllerName" />
    <result column="enable" jdbcType="BIT" property="enable" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, module_name, module_type, description, module_path, parent_id, level, application_name, 
    controller_name, enable, remark
  </sql>
  <select id="selectByExample" parameterType="com.entity.auto.model.SysModuleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_module
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_module
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_module
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.entity.auto.model.SysModuleExample">
    delete from sys_module
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.entity.auto.model.SysModule" useGeneratedKeys="true">
    insert into sys_module (module_name, module_type, description, 
      module_path, parent_id, level, 
      application_name, controller_name, enable, 
      remark)
    values (#{moduleName,jdbcType=VARCHAR}, #{moduleType,jdbcType=TINYINT}, #{description,jdbcType=VARCHAR}, 
      #{modulePath,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, #{level,jdbcType=BIT}, 
      #{applicationName,jdbcType=VARCHAR}, #{controllerName,jdbcType=VARCHAR}, #{enable,jdbcType=BIT}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.entity.auto.model.SysModule" useGeneratedKeys="true">
    insert into sys_module
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="moduleName != null">
        module_name,
      </if>
      <if test="moduleType != null">
        module_type,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="modulePath != null">
        module_path,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="applicationName != null">
        application_name,
      </if>
      <if test="controllerName != null">
        controller_name,
      </if>
      <if test="enable != null">
        enable,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="moduleName != null">
        #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="moduleType != null">
        #{moduleType,jdbcType=TINYINT},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="modulePath != null">
        #{modulePath,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=BIT},
      </if>
      <if test="applicationName != null">
        #{applicationName,jdbcType=VARCHAR},
      </if>
      <if test="controllerName != null">
        #{controllerName,jdbcType=VARCHAR},
      </if>
      <if test="enable != null">
        #{enable,jdbcType=BIT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.entity.auto.model.SysModuleExample" resultType="java.lang.Integer">
    select count(1) from 
    <if test="distinct">
      (select  distinct  
      <include refid="Base_Column_List" />
          from  sys_module
          <if test="_parameter != null">
              <include refid="Example_Where_Clause" />
          </if>) AS c
    </if>
    <if test="!distinct">
              sys_module
        <if test="_parameter != null">
          <include refid="Example_Where_Clause" />
        </if>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_module
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.moduleName != null">
        module_name = #{record.moduleName,jdbcType=VARCHAR},
      </if>
      <if test="record.moduleType != null">
        module_type = #{record.moduleType,jdbcType=TINYINT},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.modulePath != null">
        module_path = #{record.modulePath,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=BIT},
      </if>
      <if test="record.applicationName != null">
        application_name = #{record.applicationName,jdbcType=VARCHAR},
      </if>
      <if test="record.controllerName != null">
        controller_name = #{record.controllerName,jdbcType=VARCHAR},
      </if>
      <if test="record.enable != null">
        enable = #{record.enable,jdbcType=BIT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_module
    set id = #{record.id,jdbcType=INTEGER},
      module_name = #{record.moduleName,jdbcType=VARCHAR},
      module_type = #{record.moduleType,jdbcType=TINYINT},
      description = #{record.description,jdbcType=VARCHAR},
      module_path = #{record.modulePath,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      level = #{record.level,jdbcType=BIT},
      application_name = #{record.applicationName,jdbcType=VARCHAR},
      controller_name = #{record.controllerName,jdbcType=VARCHAR},
      enable = #{record.enable,jdbcType=BIT},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.entity.auto.model.SysModule">
    update sys_module
    <set>
      <if test="moduleName != null">
        module_name = #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="moduleType != null">
        module_type = #{moduleType,jdbcType=TINYINT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="modulePath != null">
        module_path = #{modulePath,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=BIT},
      </if>
      <if test="applicationName != null">
        application_name = #{applicationName,jdbcType=VARCHAR},
      </if>
      <if test="controllerName != null">
        controller_name = #{controllerName,jdbcType=VARCHAR},
      </if>
      <if test="enable != null">
        enable = #{enable,jdbcType=BIT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.entity.auto.model.SysModule">
    update sys_module
    set module_name = #{moduleName,jdbcType=VARCHAR},
      module_type = #{moduleType,jdbcType=TINYINT},
      description = #{description,jdbcType=VARCHAR},
      module_path = #{modulePath,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      level = #{level,jdbcType=BIT},
      application_name = #{applicationName,jdbcType=VARCHAR},
      controller_name = #{controllerName,jdbcType=VARCHAR},
      enable = #{enable,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectPageByExample" parameterType="com.entity.auto.model.SysModuleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
     from sys_module
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
       order by ${orderByClause} 
    </if>
    <![CDATA[LIMIT #{limit} OFFSET #{offset}]]>
  </select>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into sys_module (module_name,module_type,description,module_path,parent_id,level,application_name,controller_name,enable,remark) 
    values 
    <foreach collection="list" item="item" index="index" separator="," > 
        (#{item.moduleName,jdbcType=VARCHAR},#{item.moduleType,jdbcType=TINYINT},#{item.description,jdbcType=VARCHAR},#{item.modulePath,jdbcType=VARCHAR},#{item.parentId,jdbcType=INTEGER},#{item.level,jdbcType=BIT},#{item.applicationName,jdbcType=VARCHAR},#{item.controllerName,jdbcType=VARCHAR},#{item.enable,jdbcType=BIT},#{item.remark,jdbcType=VARCHAR}) 
   </foreach>
  </insert>
</mapper>